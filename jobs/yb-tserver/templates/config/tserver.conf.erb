--fs_data_dirs=/var/vcap/store/yb-tserver
--log_dir=/var/vcap/sys/log/yb-tserver
--server_dump_info_path=/var/vcap/sys/log/yb-tserver/tserver-info
--logtostderr=<%= p("logtostderr") %>
--max_log_size=<%= p("max_log_size") %>
--minloglevel=<%= p("minloglevel") %>
--stderrthreshold=<%= p("stderrthreshold") %>
--stop_logging_if_full_disk=<%= p("stop_logging_if_full_disk") %>
--v=<%= p("v") %>

--rpc_bind_addresses=<%= spec.address %>:<%= p("rpc_bind_addresses_port") %>
--server_broadcast_addresses=<%= spec.address %>:<%= p("rpc_bind_addresses_port") %>
--tserver_master_addrs=<%= m = link("yb-master"); m.instances.map { |i| "#{i.address}:#{m.p('rpc_bind_addresses_port')}" }.join(",") %>
--webserver_interface=<%= spec.address %>
--webserver_port=<%= p("webserver_port") %>

--enable_ysql=<%= p("enable_ysql") %>

--cql_proxy_bind_address=<%= spec.address %>:<%= p("cql_proxy_bind_port") %>
--pgsql_proxy_bind_address=<%= spec.address %>:<%= p("pgsql_proxy_bind_port") %>
--redis_proxy_bind_address=<%= spec.address %>:<%= p("redis_proxy_bind_port") %>

--default_memory_limit_to_ram_ratio=<%= p("default_memory_limit_to_ram_ratio") %>

--yb_num_shards_per_tserver=<%= p("yb_num_shards_per_tserver") %>
--ysql_num_shards_per_tserver=<%= p("ysql_num_shards_per_tserver") %>

--durable_wal_write=<%= p("durable_wal_write") %>
--interval_durable_wal_write_ms=<%= p("interval_durable_wal_write_ms") %>
--bytes_durable_wal_write_mb=<%= p("bytes_durable_wal_write_mb") %>

--stop_on_parent_termination=<%= p("stop_on_parent_termination") %>

--placement_cloud=<%= p("placement_cloud") %>
--placement_region=<%= p("placement_region") %>
--placement_zone=<%= p("placement_zone", spec.az) %>

--use_cassandra_authentication=true

--cql_table_is_transactional_by_default=<%= p("cql_table_is_transactional_by_default") %>

--callhome_collection_level=<%= p("callhome_collection_level") %>
--callhome_interval_secs=<%= p("callhome_interval_secs") %>
--callhome_url=<%= p("callhome_url") %>
--callhome_enabled=<%= p("callhome_enabled") %>

<% if p("tls.use_client_to_server_encryption") -%>
--allow_insecure_connections=<%= p("tls.allow_insecure_connections") %>
--certs_for_client_dir=/var/vcap/jobs/yb-tserver/config/certs
--use_client_to_server_encryption=<%= p("tls.use_client_to_server_encryption") %>
<% end -%>

<% if p("tls.use_node_to_node_encryption") -%>
--certs_dir=/var/vcap/jobs/yb-tserver/config/certs
--use_node_to_node_encryption=<%= p("tls.use_node_to_node_encryption") %>
<% end -%>

<% p("gflags", {}).each do |key, value| %>
--<%= key %>=<%= value %>
<% end %>

---
name: yb-master

description: |
  total instances of master nodes should be odd, because replication factor should be odd
  https://docs.yugabyte.com/latest/reference/configuration/yb-master/
  https://docs.yugabyte.com/latest/deploy/checklist/

templates:
  bin/cert-linker.erb.sh: bin/cert-linker.sh
  bin/post-start.sh: bin/post-start
  bin/pre-start.sh: bin/pre-start
  config/bpm.erb.yml: config/bpm.yml
  config/certs/ca.crt.erb: config/certs/ca.crt
  config/certs/node.crt.erb: config/certs/node.crt
  config/certs/node.key.erb: config/certs/node.key
  config/master.conf.erb: config/master.conf

packages:
  - yugabyte

consumes:
  - name: yb-master
    type: yb-master-address-link

provides:
  - name: yb-master
    type: yb-master-address-link
    properties:
      - rpc_bind_addresses_port

properties:
  bpm.limits.open_files:
    default: 64000
  bpm.limits.processes:
    default: 64000
  rpc_bind_addresses_port:
    description: for the time being, this value is used for both "rpc_bind_addresses" and "server_broadcast_addresses"
    default: 7100
  post_start_delay:
    description: |
      time delay in seconds to wait after startup before the lifecycle reports healthy,
      i.e., after the yugabyte process reports healthy, then wait an additional
      "post_start_delay"-seconds before BOSH marks the lifecycle as complete.
      this is helpful for giving some slack to yugabyte processes to give some
      extra time to join quorum and such.
      see also: https://docs.yugabyte.com/latest/manage/upgrade-deployment
    default: 30

  replication_factor:
    description: |
      override of the replication_factor passed to the master servers;
      by default it's the number of yb-master instances

  tls.use_node_to_node_encryption:
    description: |
      set to true to enable encryption between nodes
      see also: https://docs.yugabyte.com/latest/secure/tls-encryption/server-certificates
    default: false
  tls.allow_insecure_connections:
    description: |
      set to false to disallow any service with unencrypted communication from joining this cluster.
      note that the use of "allow_insecure_connections" on master nodes refers to services (e.g. tservers)
      joining the cluster, whereas "allow_insecure_connections" on tserver nodes refers to clients
      (e.g. actual applications) trying to talk to the cluster.
    default: true
  tls.node.ca:
    description: "CA root required for key/cert verification"
  tls.node.cert:
    description: "TLS certificate for this node"
  tls.node.key:
    description: "TLS key for this node"

  gflags:
    description: extra "--key=value" properties to pass to the conf file
    example: |
      gflags:
        default_memory_limit_to_ram_ratio: 0.85
        max_log_size: 256
        minloglevel: 0
        placement_cloud: aws
        placement_region: us-west-2
        stderrthreshold: 2
        stop_logging_if_full_disk: true
